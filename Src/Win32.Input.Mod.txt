(* OBERON System 3, Release 2.3.

Copyright 1999 ETH Zürich Institute for Computer Systems, 
ETH Center, CH-8092 Zürich.  e-mail: oberon@inf.ethz.ch.

This module may be used under the conditions of the general Oberon 
System 3 license contract.  The full text can be downloaded from

	"ftp://ftp.inf.ethz.ch/pub/software/Oberon/System3/license.txt;A"

Under the license terms stated it is in particular (a) prohibited to modify
the interface of this module in any way that disagrees with the style
or content of the system and (b) requested to provide all conversions
of the source code to another platform with the name OBERON. *)

MODULE Input; (** portable, except where noted / source: Win32.Input.Mod *)	(* ejz  / MH *)

(**
Module Input is responsible for event timing, mouse and keyboard input.
*)

IMPORT Kernel32, User32, Win32, Registry;

CONST
	SHIFT* = 0 (*Win32.SHIFT*); CTRL* = 1 (*Win32.CTRL*); ALT* = 2 (*Win32.ALT*); (** constants for KeyState *)

VAR
	TimeUnit*: LONGINT; (** timer ticks per second (platform dependent). *)
	emulateMM: BOOLEAN;

(** Returns the number of keystrokes in the keyboard input buffer. *)
PROCEDURE Available*(): INTEGER;
BEGIN RETURN Win32.Available()
END Available;

(** Read a character from the keyboard buffer. Blocks if no character is available. *)
PROCEDURE Read*(VAR ch: CHAR);
BEGIN Win32.GetChar(ch)
END Read;

PROCEDURE Write*(ch: CHAR);	(** non-portable *)
BEGIN Win32.PutChar(ch)
END Write;

(** Return the state of the shift keys (SHIFT, CTRL or ALT). *)
PROCEDURE KeyState*(VAR keys: SET);
BEGIN
	keys := {};
	IF User32.GetAsyncKeyState(User32.VKShift) < 0 THEN
		INCL(keys, SHIFT)
	END;
	IF User32.GetAsyncKeyState(User32.VKCtrl) < 0 THEN
		INCL(keys, CTRL)
	END;
	IF User32.GetAsyncKeyState(User32.VKAlt) < 0 THEN
		INCL(keys, ALT)
	END
END KeyState;

(** Reads the current mouse position x, y and the key state of the mouse buttons (also called keys). The mouse buttons are numbered from the right to the left as 0, 1, 2 (i.e. 1 is the middle mouse button). For example, when the left and middle buttons are pressed, keys will be set to {1, 2}. *)
PROCEDURE Mouse*(VAR keys: SET; VAR x, y: INTEGER);
BEGIN
	Win32.Mouse(keys, x, y);
	IF emulateMM THEN
		IF User32.GetAsyncKeyState(User32.VKCtrl) < 0 THEN
			INCL(keys, 1)
		ELSIF 1 IN keys THEN
			emulateMM := FALSE
		END
	END
END Mouse;

(** Returns the elapsed number of timer ticks from Oberon startup. *)
PROCEDURE Time*(): LONGINT;
BEGIN RETURN Kernel32.GetTickCount()
END Time;

BEGIN
	TimeUnit := 1000; emulateMM := TRUE
END Input.

(** Remark:

Keyboard character codes correspond to the ASCII character set. Some other important codes are:

	SHIFT-BREAK	0ADX
	BREAK	0ACX
	F1, SETUP	0A4X
	F2, NEUTRALISE	0A5X
	F3, SCRL	0A6X
	F4, NOSCRL	0A7X
	UP ARROW	0C1X
	RIGHT ARROW	0C3X
	DOWN ARROW	0C2X
	LEFT ARROW	0C4X
	INSERT	0A0X
	DELETE	0A1X
	PAGE-UP	0A2X
	PAGE-DOWN	0A3X
	ä, Ä	131, 128
	ö, Ö	132, 129
	ü, Ü	133, 130
	ß	150

The module EditKeys allows you to determine the keyboard code of any key pressed. For cross-platform portability, Oberon does not normally support all keys available on your keyboard.
*)
