(* OBERON System 3, Release 2.3.

Copyright 1999 ETH Zürich Institute for Computer Systems, 
ETH Center, CH-8092 Zürich.  e-mail: oberon@inf.ethz.ch.

This module may be used under the conditions of the general Oberon 
System 3 license contract.  The full text can be downloaded from

	"ftp://ftp.inf.ethz.ch/pub/software/Oberon/System3/license.txt;A"

Under the license terms stated it is in particular (a) prohibited to modify
the interface of this module in any way that disagrees with the style
or content of the system and (b) requested to provide all conversions
of the source code to another platform with the name OBERON. *)

MODULE MathL; (** portable / source: Win32.MathL.Mod *)

(**
	Commonly needed Math for LONGREALs.
*)

IMPORT SYSTEM;

CONST
	e* = 2.7182818284590452354D0;
	pi* = 3.14159265358979323846D0;

PROCEDURE -Sin(x: LONGREAL): LONGREAL
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0FEH,	(* FSIN *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE -Cos(x: LONGREAL): LONGREAL
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0FFH,	(* FCOS *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE -Arctan(x: LONGREAL): LONGREAL
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0E8H,	(* FLD1 *)
	0D9H, 0F3H,	(* FPATAN ST(1)/ST(0) *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE -Sqrt(x: LONGREAL): LONGREAL
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0FAH,	(* FSQRT ST(0) *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE -Ln(x: LONGREAL): LONGREAL
	0D9H, 0E8H,	(* FLD1 *)
	0D9H, 0EAH,	(* FLDL2E *)
	0DEH, 0F9H,	(* FDIVP ST(1)/ST(0) *)
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0F1H,	(* FYL2X *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE -Exp(x: LONGREAL): LONGREAL
	0DDH, 004H, 024H,	(* FLD qword [ESP] *)
	0D9H, 0EAH,	(* FLDL2E *)
	0DEH, 0C9H,	(* FMULP ST(1), ST(0) *)
	0D9H, 0C0H,	(* FLD ST(0) *)
	0D9H, 0FCH,	(* FRNDINT *)
	0D9H, 0C9H,	(* FXCH ST(1), ST(0) *)
	0D8H, 0E1H,	(* FSUB ST(0), ST(1) *)
	0D9H, 0F0H,	(* F2XM1 *)
	0D9H, 0E8H,	(* FLD1 *)
	0DEH, 0C1H,	(* FADDP ST(1), ST(0) *)
	0D9H, 0FDH,	(* FSCALE *)
	0DDH, 0D9H,	(* FSTP ST(1) *)
	058H,	(* POP EAX *)
	058H	(* POP EAX *);

PROCEDURE sin*(x: LONGREAL): LONGREAL;
BEGIN 
	IF x < 0.0D0 THEN RETURN -Sin(-x) ELSE RETURN Sin(x) END 
END sin;

PROCEDURE cos*(x: LONGREAL): LONGREAL;
BEGIN 
	IF x < 0.0D0 THEN RETURN Cos(-x) ELSE RETURN Cos(x) END 
END cos;

PROCEDURE arctan*(x: LONGREAL): LONGREAL;
BEGIN 
	RETURN Arctan(x)
END arctan;

PROCEDURE sqrt*(x: LONGREAL): LONGREAL;
BEGIN 
	IF x <= 0.0D0 THEN
		IF x = 0.0D0 THEN RETURN 0.0D0 ELSE HALT(80) END
	ELSE
		RETURN Sqrt(x)
	END
END sqrt;

PROCEDURE ln*(x: LONGREAL): LONGREAL;
BEGIN 
	IF x <= 0.0D0 THEN HALT(80)
	ELSE
		RETURN Ln(x)
	END
END ln;

PROCEDURE exp*(x: LONGREAL): LONGREAL;
BEGIN 
	RETURN Exp(x)
END exp;

END MathL.